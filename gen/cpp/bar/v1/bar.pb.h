// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: bar/v1/bar.proto
// Protobuf C++ Version: 5.29.3

#ifndef bar_2fv1_2fbar_2eproto_2epb_2eh
#define bar_2fv1_2fbar_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "baz/v1/baz.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_bar_2fv1_2fbar_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_bar_2fv1_2fbar_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_bar_2fv1_2fbar_2eproto;
namespace bar {
namespace v1 {
class GetBarRequest;
struct GetBarRequestDefaultTypeInternal;
extern GetBarRequestDefaultTypeInternal _GetBarRequest_default_instance_;
class GetBarResponse;
struct GetBarResponseDefaultTypeInternal;
extern GetBarResponseDefaultTypeInternal _GetBarResponse_default_instance_;
class GetBazRequest;
struct GetBazRequestDefaultTypeInternal;
extern GetBazRequestDefaultTypeInternal _GetBazRequest_default_instance_;
class GetBazResponse;
struct GetBazResponseDefaultTypeInternal;
extern GetBazResponseDefaultTypeInternal _GetBazResponse_default_instance_;
}  // namespace v1
}  // namespace bar
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace bar {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class GetBazRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bar.v1.GetBazRequest) */ {
 public:
  inline GetBazRequest() : GetBazRequest(nullptr) {}
  ~GetBazRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBazRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBazRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBazRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBazRequest(const GetBazRequest& from) : GetBazRequest(nullptr, from) {}
  inline GetBazRequest(GetBazRequest&& from) noexcept
      : GetBazRequest(nullptr, std::move(from)) {}
  inline GetBazRequest& operator=(const GetBazRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBazRequest& operator=(GetBazRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBazRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBazRequest* internal_default_instance() {
    return reinterpret_cast<const GetBazRequest*>(
        &_GetBazRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetBazRequest& a, GetBazRequest& b) { a.Swap(&b); }
  inline void Swap(GetBazRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBazRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBazRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBazRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBazRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBazRequest& from) { GetBazRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBazRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bar.v1.GetBazRequest"; }

 protected:
  explicit GetBazRequest(::google::protobuf::Arena* arena);
  GetBazRequest(::google::protobuf::Arena* arena, const GetBazRequest& from);
  GetBazRequest(::google::protobuf::Arena* arena, GetBazRequest&& from) noexcept
      : GetBazRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBazIdFieldNumber = 1,
  };
  // string baz_id = 1 [json_name = "bazId"];
  void clear_baz_id() ;
  const std::string& baz_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_baz_id(Arg_&& arg, Args_... args);
  std::string* mutable_baz_id();
  PROTOBUF_NODISCARD std::string* release_baz_id();
  void set_allocated_baz_id(std::string* value);

  private:
  const std::string& _internal_baz_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_baz_id(
      const std::string& value);
  std::string* _internal_mutable_baz_id();

  public:
  // @@protoc_insertion_point(class_scope:bar.v1.GetBazRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBazRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr baz_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bar_2fv1_2fbar_2eproto;
};
// -------------------------------------------------------------------

class GetBarResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bar.v1.GetBarResponse) */ {
 public:
  inline GetBarResponse() : GetBarResponse(nullptr) {}
  ~GetBarResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBarResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBarResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBarResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBarResponse(const GetBarResponse& from) : GetBarResponse(nullptr, from) {}
  inline GetBarResponse(GetBarResponse&& from) noexcept
      : GetBarResponse(nullptr, std::move(from)) {}
  inline GetBarResponse& operator=(const GetBarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBarResponse& operator=(GetBarResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBarResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBarResponse* internal_default_instance() {
    return reinterpret_cast<const GetBarResponse*>(
        &_GetBarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetBarResponse& a, GetBarResponse& b) { a.Swap(&b); }
  inline void Swap(GetBarResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBarResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBarResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBarResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBarResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBarResponse& from) { GetBarResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBarResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bar.v1.GetBarResponse"; }

 protected:
  explicit GetBarResponse(::google::protobuf::Arena* arena);
  GetBarResponse(::google::protobuf::Arena* arena, const GetBarResponse& from);
  GetBarResponse(::google::protobuf::Arena* arena, GetBarResponse&& from) noexcept
      : GetBarResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBarNameFieldNumber = 1,
  };
  // string bar_name = 1 [json_name = "barName"];
  void clear_bar_name() ;
  const std::string& bar_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_name(Arg_&& arg, Args_... args);
  std::string* mutable_bar_name();
  PROTOBUF_NODISCARD std::string* release_bar_name();
  void set_allocated_bar_name(std::string* value);

  private:
  const std::string& _internal_bar_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_name(
      const std::string& value);
  std::string* _internal_mutable_bar_name();

  public:
  // @@protoc_insertion_point(class_scope:bar.v1.GetBarResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBarResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bar_name_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bar_2fv1_2fbar_2eproto;
};
// -------------------------------------------------------------------

class GetBarRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bar.v1.GetBarRequest) */ {
 public:
  inline GetBarRequest() : GetBarRequest(nullptr) {}
  ~GetBarRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBarRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBarRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBarRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBarRequest(const GetBarRequest& from) : GetBarRequest(nullptr, from) {}
  inline GetBarRequest(GetBarRequest&& from) noexcept
      : GetBarRequest(nullptr, std::move(from)) {}
  inline GetBarRequest& operator=(const GetBarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBarRequest& operator=(GetBarRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBarRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBarRequest* internal_default_instance() {
    return reinterpret_cast<const GetBarRequest*>(
        &_GetBarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetBarRequest& a, GetBarRequest& b) { a.Swap(&b); }
  inline void Swap(GetBarRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBarRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBarRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBarRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBarRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBarRequest& from) { GetBarRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBarRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bar.v1.GetBarRequest"; }

 protected:
  explicit GetBarRequest(::google::protobuf::Arena* arena);
  GetBarRequest(::google::protobuf::Arena* arena, const GetBarRequest& from);
  GetBarRequest(::google::protobuf::Arena* arena, GetBarRequest&& from) noexcept
      : GetBarRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBarIdFieldNumber = 1,
  };
  // string bar_id = 1 [json_name = "barId"];
  void clear_bar_id() ;
  const std::string& bar_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bar_id(Arg_&& arg, Args_... args);
  std::string* mutable_bar_id();
  PROTOBUF_NODISCARD std::string* release_bar_id();
  void set_allocated_bar_id(std::string* value);

  private:
  const std::string& _internal_bar_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bar_id(
      const std::string& value);
  std::string* _internal_mutable_bar_id();

  public:
  // @@protoc_insertion_point(class_scope:bar.v1.GetBarRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBarRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bar_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bar_2fv1_2fbar_2eproto;
};
// -------------------------------------------------------------------

class GetBazResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:bar.v1.GetBazResponse) */ {
 public:
  inline GetBazResponse() : GetBazResponse(nullptr) {}
  ~GetBazResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetBazResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetBazResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBazResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBazResponse(const GetBazResponse& from) : GetBazResponse(nullptr, from) {}
  inline GetBazResponse(GetBazResponse&& from) noexcept
      : GetBazResponse(nullptr, std::move(from)) {}
  inline GetBazResponse& operator=(const GetBazResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBazResponse& operator=(GetBazResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBazResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBazResponse* internal_default_instance() {
    return reinterpret_cast<const GetBazResponse*>(
        &_GetBazResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetBazResponse& a, GetBazResponse& b) { a.Swap(&b); }
  inline void Swap(GetBazResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBazResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBazResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetBazResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBazResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBazResponse& from) { GetBazResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetBazResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "bar.v1.GetBazResponse"; }

 protected:
  explicit GetBazResponse(::google::protobuf::Arena* arena);
  GetBazResponse(::google::protobuf::Arena* arena, const GetBazResponse& from);
  GetBazResponse(::google::protobuf::Arena* arena, GetBazResponse&& from) noexcept
      : GetBazResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBazFieldNumber = 1,
  };
  // .baz.v1.Baz baz = 1 [json_name = "baz"];
  bool has_baz() const;
  void clear_baz() ;
  const ::baz::v1::Baz& baz() const;
  PROTOBUF_NODISCARD ::baz::v1::Baz* release_baz();
  ::baz::v1::Baz* mutable_baz();
  void set_allocated_baz(::baz::v1::Baz* value);
  void unsafe_arena_set_allocated_baz(::baz::v1::Baz* value);
  ::baz::v1::Baz* unsafe_arena_release_baz();

  private:
  const ::baz::v1::Baz& _internal_baz() const;
  ::baz::v1::Baz* _internal_mutable_baz();

  public:
  // @@protoc_insertion_point(class_scope:bar.v1.GetBazResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBazResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::baz::v1::Baz* baz_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_bar_2fv1_2fbar_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetBarRequest

// string bar_id = 1 [json_name = "barId"];
inline void GetBarRequest::clear_bar_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_id_.ClearToEmpty();
}
inline const std::string& GetBarRequest::bar_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bar.v1.GetBarRequest.bar_id)
  return _internal_bar_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBarRequest::set_bar_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bar.v1.GetBarRequest.bar_id)
}
inline std::string* GetBarRequest::mutable_bar_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_id();
  // @@protoc_insertion_point(field_mutable:bar.v1.GetBarRequest.bar_id)
  return _s;
}
inline const std::string& GetBarRequest::_internal_bar_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bar_id_.Get();
}
inline void GetBarRequest::_internal_set_bar_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_id_.Set(value, GetArena());
}
inline std::string* GetBarRequest::_internal_mutable_bar_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bar_id_.Mutable( GetArena());
}
inline std::string* GetBarRequest::release_bar_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bar.v1.GetBarRequest.bar_id)
  return _impl_.bar_id_.Release();
}
inline void GetBarRequest::set_allocated_bar_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bar_id_.IsDefault()) {
    _impl_.bar_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bar.v1.GetBarRequest.bar_id)
}

// -------------------------------------------------------------------

// GetBarResponse

// string bar_name = 1 [json_name = "barName"];
inline void GetBarResponse::clear_bar_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_name_.ClearToEmpty();
}
inline const std::string& GetBarResponse::bar_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bar.v1.GetBarResponse.bar_name)
  return _internal_bar_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBarResponse::set_bar_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bar.v1.GetBarResponse.bar_name)
}
inline std::string* GetBarResponse::mutable_bar_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bar_name();
  // @@protoc_insertion_point(field_mutable:bar.v1.GetBarResponse.bar_name)
  return _s;
}
inline const std::string& GetBarResponse::_internal_bar_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bar_name_.Get();
}
inline void GetBarResponse::_internal_set_bar_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_name_.Set(value, GetArena());
}
inline std::string* GetBarResponse::_internal_mutable_bar_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bar_name_.Mutable( GetArena());
}
inline std::string* GetBarResponse::release_bar_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bar.v1.GetBarResponse.bar_name)
  return _impl_.bar_name_.Release();
}
inline void GetBarResponse::set_allocated_bar_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bar_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.bar_name_.IsDefault()) {
    _impl_.bar_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bar.v1.GetBarResponse.bar_name)
}

// -------------------------------------------------------------------

// GetBazRequest

// string baz_id = 1 [json_name = "bazId"];
inline void GetBazRequest::clear_baz_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_id_.ClearToEmpty();
}
inline const std::string& GetBazRequest::baz_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bar.v1.GetBazRequest.baz_id)
  return _internal_baz_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBazRequest::set_baz_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:bar.v1.GetBazRequest.baz_id)
}
inline std::string* GetBazRequest::mutable_baz_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_baz_id();
  // @@protoc_insertion_point(field_mutable:bar.v1.GetBazRequest.baz_id)
  return _s;
}
inline const std::string& GetBazRequest::_internal_baz_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.baz_id_.Get();
}
inline void GetBazRequest::_internal_set_baz_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_id_.Set(value, GetArena());
}
inline std::string* GetBazRequest::_internal_mutable_baz_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.baz_id_.Mutable( GetArena());
}
inline std::string* GetBazRequest::release_baz_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bar.v1.GetBazRequest.baz_id)
  return _impl_.baz_id_.Release();
}
inline void GetBazRequest::set_allocated_baz_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.baz_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.baz_id_.IsDefault()) {
    _impl_.baz_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:bar.v1.GetBazRequest.baz_id)
}

// -------------------------------------------------------------------

// GetBazResponse

// .baz.v1.Baz baz = 1 [json_name = "baz"];
inline bool GetBazResponse::has_baz() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.baz_ != nullptr);
  return value;
}
inline const ::baz::v1::Baz& GetBazResponse::_internal_baz() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::baz::v1::Baz* p = _impl_.baz_;
  return p != nullptr ? *p : reinterpret_cast<const ::baz::v1::Baz&>(::baz::v1::_Baz_default_instance_);
}
inline const ::baz::v1::Baz& GetBazResponse::baz() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:bar.v1.GetBazResponse.baz)
  return _internal_baz();
}
inline void GetBazResponse::unsafe_arena_set_allocated_baz(::baz::v1::Baz* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.baz_);
  }
  _impl_.baz_ = reinterpret_cast<::baz::v1::Baz*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:bar.v1.GetBazResponse.baz)
}
inline ::baz::v1::Baz* GetBazResponse::release_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::baz::v1::Baz* released = _impl_.baz_;
  _impl_.baz_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::baz::v1::Baz* GetBazResponse::unsafe_arena_release_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:bar.v1.GetBazResponse.baz)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::baz::v1::Baz* temp = _impl_.baz_;
  _impl_.baz_ = nullptr;
  return temp;
}
inline ::baz::v1::Baz* GetBazResponse::_internal_mutable_baz() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.baz_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::baz::v1::Baz>(GetArena());
    _impl_.baz_ = reinterpret_cast<::baz::v1::Baz*>(p);
  }
  return _impl_.baz_;
}
inline ::baz::v1::Baz* GetBazResponse::mutable_baz() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::baz::v1::Baz* _msg = _internal_mutable_baz();
  // @@protoc_insertion_point(field_mutable:bar.v1.GetBazResponse.baz)
  return _msg;
}
inline void GetBazResponse::set_allocated_baz(::baz::v1::Baz* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.baz_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.baz_ = reinterpret_cast<::baz::v1::Baz*>(value);
  // @@protoc_insertion_point(field_set_allocated:bar.v1.GetBazResponse.baz)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace bar


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // bar_2fv1_2fbar_2eproto_2epb_2eh
